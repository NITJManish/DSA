The Fibonacci numbers are the numbers in the following integer sequence: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ……..
Input  : n = 1

Output : 1

Input  : n = 9

Output : 34

Input  : n = 10

Output : 55

//using recursion
import java.util.Scanner;
public class Fibonacci {
public static int fibb(int n,int dp[]) {
if(n==0 || n==1)
{
return n;
}
int ans1,ans2;
ans1 = fibb(n-1,dp);
ans2 = fibb(n-2,dp);

int myAns = ans1 + ans2;
return myAns;
}

// fibonacci using memoization
import java.util.Scanner;
public class Fibonacci {
public static int fibb(int n,int dp[]) {
if(n==0 || n==1)
{
return n;
}
int ans1,ans2;
if(dp[n-1] == -1){
ans1 = fibb(n-1,dp);
dp[n-1] = ans1;
}
else{
ans1 = dp[n-1];
}
if(dp[n-2] == -1){
ans2 = fibb(n-2,dp);
dp[n-2] = ans2;
}
else{
ans2 = dp[n-2];
}
int myAns = ans1 + ans2;
return myAns;
}
public static void main(String[] args) {
Scanner s = new Scanner(System.in);
int n = s.nextInt();
int[] dp = new int[n+1];
for(int i=0;i<dp.length;i++) {
dp[i] = -1;
}
int ans = fibb(n,dp);
System.out.println(ans);
}
}


//Iterative method
public class Fibonacci {
public static int fibb1(int n) {
if(n==0 || n==1)
{
return n;
}
int[] dp = new int[n+1];
dp[0] = 0;
dp[1] = 1;
// n > = 2
for(int i=2;i<=n;i++) {
dp[i] = dp[i-1] + dp[i-2];
}
return dp[n];
}

