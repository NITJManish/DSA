2418. Sort the People
Solved
Easy
Topics
Companies
Hint
You are given an array of strings names, and an array heights that consists of distinct positive integers. Both arrays are of length n.

For each index i, names[i] and heights[i] denote the name and height of the ith person.

Return names sorted in descending order by the people's heights.

 

Example 1:

Input: names = ["Mary","John","Emma"], heights = [180,165,170]
Output: ["Mary","Emma","John"]
Explanation: Mary is the tallest, followed by Emma and John.
Example 2:

Input: names = ["Alice","Bob","Bob"], heights = [155,185,150]
Output: ["Bob","Alice","Bob"]
Explanation: The first Bob is the tallest, followed by Alice and the second Bob.


import java.util.PriorityQueue;

class Solution {
    public String[] sortPeople(String[] names, int[] heights) {
        // Create a priority queue (max-heap) that sorts arrays based on the height (first element in the array)
        PriorityQueue<int[]> pq = new PriorityQueue<>((a, b) -> b[0] - a[0]);
        
        // Iterate through the heights array and add each height with its index to the priority queue
        for (int i = 0; i < heights.length; i++) {
            pq.offer(new int[] { heights[i], i });
        }

        // Create an array to store the sorted names
        String[] res = new String[names.length];
        int idx = 0;
        
        // While the priority queue is not empty, remove the highest height element
        // Use the index from the removed element to fetch the corresponding name
        while (!pq.isEmpty()) {
            res[idx++] = names[pq.remove()[1]];
        }
        
        // Return the sorted names array
        return res;
    }
}
