Program to cyclically rotate an array by one
Last Updated : 11 Sep, 2023
Given an array, the task is to cyclically rotate the array clockwise by one time. 

Examples:  

Input: arr[] = {1, 2, 3, 4, 5}
Output: arr[] = {5, 1, 2, 3, 4}

Input: arr[] = {2, 3, 4, 5, 1}
Output: {1, 2, 3, 4, 5}

Follow the steps to solve the problem:

Take two pointers i and j which point to first and last element of array respectively.
Start swapping arr[i] and arr[j] and keep j fixed and i moving towards j.
Repeat above step till i is not equal to j.
Below is the implementation for the above idea:


import java.util.Arrays;
 
public class Test {
    static int arr[] = new int[] { 1, 2, 3, 4, 5 };
 
    static void rotate()
    {
        int i = 0, j = arr.length - 1;
        while (i != j) {
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
            i++;
        }
    }
 
    /* Driver program */
    public static void main(String[] args)
    {
        System.out.println("Given Array is");
        System.out.println(Arrays.toString(arr));
 
        rotate();
 
        System.out.println("Rotated Array is");
        System.out.println(Arrays.toString(arr));
    }
}

Time Complexity: O(n), as we need to iterate through all the elements. Where n is the number of elements in the array.
Auxiliary Space: O(1), as we are using constant space.